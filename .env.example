# ==============================================
# ENVIRONMENT CONFIGURATION TEMPLATE
# ==============================================
# Copy this file to .env.local and fill in your values
# This file serves as a template for all required environment variables

# Application Configuration
NODE_ENV=development
PORT=3000
APP_NAME=agent-flow
APP_VERSION=1.0.0
APP_DESCRIPTION=NestJS Agent Flow Application
GLOBAL_PREFIX=api/v1
REQUEST_TIMEOUT=30000
MAX_REQUEST_SIZE=10485760

# Database Configuration
DATABASE_TYPE=postgres
DATABASE_HOST=localhost
DATABASE_PORT=5432
DATABASE_USERNAME=your_db_username
DATABASE_PASSWORD=your_db_password
DATABASE_NAME=your_db_name
DATABASE_SYNCHRONIZE=true
DATABASE_LOGGING=true
DATABASE_SSL=false
DATABASE_MAX_CONNECTIONS=10
DATABASE_CONNECTION_TIMEOUT=60000
DATABASE_SCHEMA=public
DATABASE_MIGRATIONS_DIR=src/core/database/migrations
DATABASE_ENTITIES_DIR=src/**/*.entity.ts

# Redis Configuration
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=your_redis_password
REDIS_DATABASE=0
CACHE_TTL=3600
REDIS_MAX_CONNECTIONS=10
REDIS_CONNECTION_TIMEOUT=10000
REDIS_COMMAND_TIMEOUT=5000
REDIS_ENABLE_READY_CHECK=true
REDIS_LAZY_CONNECT=false
REDIS_KEY_PREFIX=agent-flow:

# JWT Authentication Configuration
# IMPORTANT: Generate secure random strings for production!
# You can use: node -e "console.log(require('crypto').randomBytes(64).toString('hex'))"
JWT_SECRET=your-super-secret-jwt-key-at-least-32-characters-long
JWT_EXPIRES_IN=15m
JWT_REFRESH_SECRET=your-super-secret-refresh-key-at-least-32-characters-long
JWT_REFRESH_EXPIRES_IN=7d
BCRYPT_ROUNDS=12
MAX_LOGIN_ATTEMPTS=5
LOCKOUT_DURATION=900000
SESSION_TIMEOUT=3600000
PASSWORD_RESET_TOKEN_EXPIRY=1h
EMAIL_VERIFICATION_TOKEN_EXPIRY=24h

# Email Configuration
EMAIL_HOST=your_smtp_host
EMAIL_PORT=587
EMAIL_SECURE=true
EMAIL_USERNAME=your_email_username
EMAIL_PASSWORD=your_email_password
EMAIL_FROM=noreply@yourdomain.com
EMAIL_FROM_NAME=Your App Name
EMAIL_REPLY_TO=support@yourdomain.com
EMAIL_CONNECTION_TIMEOUT=60000
EMAIL_GREETING_TIMEOUT=30000
EMAIL_SOCKET_TIMEOUT=60000
EMAIL_IGNORE_TLS=false
EMAIL_REQUIRE_TLS=true
EMAIL_TEMPLATE_DIR=src/shared/email/templates

# File Storage Configuration
STORAGE_PROVIDER=local
STORAGE_UPLOAD_DIR=uploads
STORAGE_MAX_FILE_SIZE=10485760
STORAGE_ALLOWED_MIME_TYPES=image/jpeg,image/png,image/gif,application/pdf,text/plain
STORAGE_BASE_URL=http://localhost:3000
STORAGE_URL_EXPIRATION_TIME=3600

# AWS S3 Configuration (if using AWS)
AWS_ACCESS_KEY_ID=your_aws_access_key
AWS_SECRET_ACCESS_KEY=your_aws_secret_key
AWS_REGION=us-east-1
AWS_S3_BUCKET=your_s3_bucket_name

# Azure Blob Storage Configuration (if using Azure)
AZURE_STORAGE_CONNECTION_STRING=your_azure_connection_string
AZURE_STORAGE_CONTAINER=your_azure_container

# Google Cloud Storage Configuration (if using Google Cloud)
GOOGLE_CLOUD_PROJECT_ID=your_project_id
GOOGLE_CLOUD_KEY_FILENAME=path/to/service-account-key.json
GOOGLE_CLOUD_STORAGE_BUCKET=your_gcs_bucket

# Logging Configuration
LOG_LEVEL=info
LOG_FORMAT=json
LOG_ENABLE_CONSOLE=true
LOG_ENABLE_FILE=true
LOG_DIR=logs
LOG_ERROR_FILE=error.log
LOG_COMBINED_FILE=combined.log
LOG_MAX_FILE_SIZE=20971520
LOG_MAX_FILES=14
LOG_ENABLE_ROTATION=true
LOG_ENABLE_TIMESTAMP=true
LOG_ENABLE_COLORIZE=true
LOG_ENABLE_REQUEST_LOGGING=true
LOG_DATE_PATTERN=YYYY-MM-DD-HH

# Rate Limiting Configuration
RATE_LIMIT_ENABLED=true
RATE_LIMIT_TTL=60000
RATE_LIMIT_MAX=100
RATE_LIMIT_AUTH_TTL=60000
RATE_LIMIT_AUTH_MAX=200
RATE_LIMIT_PUBLIC_TTL=60000
RATE_LIMIT_PUBLIC_MAX=50
RATE_LIMIT_ERROR_MESSAGE=Too many requests, please try again later.
RATE_LIMIT_SKIP_SUCCESSFUL=false
RATE_LIMIT_SKIP_FAILED=false
RATE_LIMIT_KEY_GENERATOR=ip

# CORS Configuration
CORS_ENABLED=true
CORS_ORIGIN=http://localhost:3000,http://localhost:3001
CORS_METHODS=GET,HEAD,PUT,PATCH,POST,DELETE,OPTIONS
CORS_ALLOWED_HEADERS=Content-Type,Accept,Authorization,X-Requested-With
CORS_EXPOSED_HEADERS=
CORS_CREDENTIALS=true
CORS_PREFLIGHT_CONTINUE=false
CORS_OPTIONS_SUCCESS_STATUS=true