# ==============================================
# PRODUCTION ENVIRONMENT CONFIGURATION
# ==============================================

# Application Configuration
NODE_ENV=production
PORT=3000
APP_NAME=agent-flow
APP_VERSION=1.0.0
APP_DESCRIPTION=NestJS Agent Flow Application - Production
GLOBAL_PREFIX=api/v1
REQUEST_TIMEOUT=30000
MAX_REQUEST_SIZE=10485760

# Database Configuration (PostgreSQL)
DATABASE_TYPE=postgres
DATABASE_HOST=${DATABASE_HOST}
DATABASE_PORT=5432
DATABASE_USERNAME=${DATABASE_USERNAME}
DATABASE_PASSWORD=${DATABASE_PASSWORD}
DATABASE_NAME=${DATABASE_NAME}
DATABASE_SYNCHRONIZE=false
DATABASE_LOGGING=false
DATABASE_SSL=true
DATABASE_MAX_CONNECTIONS=50
DATABASE_CONNECTION_TIMEOUT=60000
DATABASE_SCHEMA=public
DATABASE_MIGRATIONS_DIR=dist/core/database/migrations
DATABASE_ENTITIES_DIR=dist/**/*.entity.js

# Redis Configuration
REDIS_HOST=${REDIS_HOST}
REDIS_PORT=6379
REDIS_PASSWORD=${REDIS_PASSWORD}
REDIS_DATABASE=0
CACHE_TTL=3600
REDIS_MAX_CONNECTIONS=50
REDIS_CONNECTION_TIMEOUT=10000
REDIS_COMMAND_TIMEOUT=5000
REDIS_ENABLE_READY_CHECK=true
REDIS_LAZY_CONNECT=false
REDIS_KEY_PREFIX=agent-flow:prod:

# JWT Authentication Configuration
JWT_SECRET=${JWT_SECRET}
JWT_EXPIRES_IN=15m
JWT_REFRESH_SECRET=${JWT_REFRESH_SECRET}
JWT_REFRESH_EXPIRES_IN=7d
BCRYPT_ROUNDS=12
MAX_LOGIN_ATTEMPTS=3
LOCKOUT_DURATION=1800000
SESSION_TIMEOUT=3600000
PASSWORD_RESET_TOKEN_EXPIRY=30m
EMAIL_VERIFICATION_TOKEN_EXPIRY=24h

# Email Configuration
EMAIL_HOST=${EMAIL_HOST}
EMAIL_PORT=587
EMAIL_SECURE=true
EMAIL_USERNAME=${EMAIL_USERNAME}
EMAIL_PASSWORD=${EMAIL_PASSWORD}
EMAIL_FROM=${EMAIL_FROM}
EMAIL_FROM_NAME=Agent Flow
EMAIL_REPLY_TO=${EMAIL_REPLY_TO}
EMAIL_CONNECTION_TIMEOUT=60000
EMAIL_GREETING_TIMEOUT=30000
EMAIL_SOCKET_TIMEOUT=60000
EMAIL_IGNORE_TLS=false
EMAIL_REQUIRE_TLS=true
EMAIL_TEMPLATE_DIR=dist/shared/email/templates

# File Storage Configuration
STORAGE_PROVIDER=aws-s3
STORAGE_UPLOAD_DIR=uploads
STORAGE_MAX_FILE_SIZE=10485760
STORAGE_ALLOWED_MIME_TYPES=image/jpeg,image/png,image/gif,application/pdf,text/plain
STORAGE_BASE_URL=${STORAGE_BASE_URL}
STORAGE_URL_EXPIRATION_TIME=3600

# AWS S3 Configuration
AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
AWS_REGION=${AWS_REGION}
AWS_S3_BUCKET=${AWS_S3_BUCKET}

# Logging Configuration
LOG_LEVEL=warn
LOG_FORMAT=json
LOG_ENABLE_CONSOLE=false
LOG_ENABLE_FILE=true
LOG_DIR=logs
LOG_ERROR_FILE=error.log
LOG_COMBINED_FILE=combined.log
LOG_MAX_FILE_SIZE=52428800
LOG_MAX_FILES=30
LOG_ENABLE_ROTATION=true
LOG_ENABLE_TIMESTAMP=true
LOG_ENABLE_COLORIZE=false
LOG_ENABLE_REQUEST_LOGGING=false
LOG_DATE_PATTERN=YYYY-MM-DD

# Rate Limiting Configuration
RATE_LIMIT_ENABLED=true
RATE_LIMIT_TTL=60000
RATE_LIMIT_MAX=100
RATE_LIMIT_AUTH_TTL=60000
RATE_LIMIT_AUTH_MAX=200
RATE_LIMIT_PUBLIC_TTL=60000
RATE_LIMIT_PUBLIC_MAX=50
RATE_LIMIT_ERROR_MESSAGE=Too many requests, please try again later.
RATE_LIMIT_SKIP_SUCCESSFUL=false
RATE_LIMIT_SKIP_FAILED=false
RATE_LIMIT_KEY_GENERATOR=ip

# CORS Configuration
CORS_ENABLED=true
CORS_ORIGIN=${CORS_ORIGIN}
CORS_METHODS=GET,HEAD,PUT,PATCH,POST,DELETE,OPTIONS
CORS_ALLOWED_HEADERS=Content-Type,Accept,Authorization,X-Requested-With
CORS_EXPOSED_HEADERS=
CORS_CREDENTIALS=true
CORS_PREFLIGHT_CONTINUE=false
CORS_OPTIONS_SUCCESS_STATUS=true